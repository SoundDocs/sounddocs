name: Build Installers

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd agents/capture-agent-py
          pip install --upgrade pip
          pip install pyinstaller
          pip install .

      - name: Build executable
        run: |
          cd agents/capture-agent-py
          pyinstaller --onefile --name sounddocs-capture-agent --add-data "capture_agent:capture_agent" --add-data "generate_cert.py:." main.py

      - name: Install mkcert
        run: brew install mkcert

      - name: Create installer package
        run: |
          cd agents/capture-agent-py
          mkdir -p pkg-root/Applications/SoundDocs
          cp dist/sounddocs-capture-agent pkg-root/Applications/SoundDocs/

          # Create launch script
          cat > pkg-root/Applications/SoundDocs/launch-agent.sh << 'EOF'
          #!/bin/bash
          cd "$HOME/.sounddocs-agent" || mkdir -p "$HOME/.sounddocs-agent" && cd "$HOME/.sounddocs-agent"

          # Check if mkcert CA is installed
          if ! mkcert -CAROOT >/dev/null 2>&1 || [ ! -f "$(mkcert -CAROOT)/rootCA.pem" ]; then
            echo "Setting up mkcert Certificate Authority..."
            mkcert -install
          fi

          # Generate certs if needed
          if [ ! -f localhost.pem ]; then
            echo "Generating SSL certificates..."
            mkcert -cert-file localhost.pem -key-file localhost-key.pem localhost 127.0.0.1 ::1
          fi

          exec /Applications/SoundDocs/sounddocs-capture-agent
          EOF
          chmod +x pkg-root/Applications/SoundDocs/launch-agent.sh
          chmod +x pkg-root/Applications/SoundDocs/sounddocs-capture-agent

          # Build package
          pkgbuild --root pkg-root --identifier org.sounddocs.capture-agent --version 0.1.1 --install-location / SoundDocsAgent-macOS.pkg

      - name: Upload macOS installer
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: agents/capture-agent-py/SoundDocsAgent-macOS.pkg

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd agents/capture-agent-py
          pip install --upgrade pip
          pip install pyinstaller
          pip install .

      - name: Build executable
        run: |
          cd agents/capture-agent-py
          pyinstaller --onefile --name sounddocs-capture-agent --add-data "capture_agent:capture_agent" --add-data "generate_cert.py:." main.py

      - name: Install NSIS
        run: choco install nsis -y

      - name: Create NSIS installer script
        run: |
          cd agents/capture-agent-py
          cat > installer.nsi << 'EOF'
          !define APPNAME "SoundDocs Capture Agent"
          !define APPVERSION "0.1.1"
          Name "${APPNAME}"
          OutFile "SoundDocsAgent-Windows.exe"
          InstallDir "$PROGRAMFILES\SoundDocs"
          RequestExecutionLevel admin

          Page directory
          Page instfiles

          Section "Install"
              SetOutPath $INSTDIR
              File "dist\sounddocs-capture-agent.exe"
              
              ; Create agent directory
              CreateDirectory "$PROFILE\.sounddocs-agent"
              
              ; Create setup helper script
              FileOpen $0 "$INSTDIR\setup-dependencies.bat" w
              FileWrite $0 "@echo off$\r$\n"
              FileWrite $0 "echo Setting up SoundDocs Capture Agent dependencies...$\r$\n"
              FileWrite $0 "echo Checking for mkcert...$\r$\n"
              FileWrite $0 "where mkcert >nul 2>&1$\r$\n"
              FileWrite $0 "if %errorlevel% neq 0 ($\r$\n"
              FileWrite $0 "  echo Installing mkcert via Chocolatey...$\r$\n"
              FileWrite $0 "  where choco >nul 2>&1$\r$\n"
              FileWrite $0 "  if %errorlevel% neq 0 ($\r$\n"
              FileWrite $0 "    echo Please install Chocolatey first: https://chocolatey.org/install$\r$\n"
              FileWrite $0 "    pause$\r$\n"
              FileWrite $0 "    exit /b 1$\r$\n"
              FileWrite $0 "  )$\r$\n"
              FileWrite $0 "  choco install mkcert -y$\r$\n"
              FileWrite $0 ")$\r$\n"
              FileWrite $0 "echo Setting up mkcert certificate authority...$\r$\n"
              FileWrite $0 "mkcert -install$\r$\n"
              FileWrite $0 "echo Generating SSL certificates...$\r$\n"
              FileWrite $0 "cd /d %USERPROFILE%\.sounddocs-agent$\r$\n"
              FileWrite $0 "mkcert -cert-file localhost.pem -key-file localhost-key.pem localhost 127.0.0.1 ::1$\r$\n"
              FileWrite $0 "echo Setup complete!$\r$\n"
              FileWrite $0 "pause$\r$\n"
              FileClose $0
              
              ; Create launch script
              FileOpen $1 "$INSTDIR\launch-agent.bat" w
              FileWrite $1 "@echo off$\r$\n"
              FileWrite $1 "cd /d %USERPROFILE%\.sounddocs-agent$\r$\n"
              FileWrite $1 "if not exist localhost.pem ($\r$\n"
              FileWrite $1 "  echo SSL certificates not found. Running setup...$\r$\n"
              FileWrite $1 "  call $\"$INSTDIR\setup-dependencies.bat$\"$\r$\n"
              FileWrite $1 ")$\r$\n"
              FileWrite $1 "$\"$INSTDIR\sounddocs-capture-agent.exe$\"$\r$\n"
              FileClose $1
              
              ; Create shortcuts
              CreateDirectory "$SMPROGRAMS\SoundDocs"
              CreateShortcut "$SMPROGRAMS\SoundDocs\SoundDocs Capture Agent.lnk" "$INSTDIR\launch-agent.bat" "" "$INSTDIR\sounddocs-capture-agent.exe" 0
              CreateShortcut "$SMPROGRAMS\SoundDocs\Setup Dependencies.lnk" "$INSTDIR\setup-dependencies.bat"
              CreateShortcut "$DESKTOP\SoundDocs Capture Agent.lnk" "$INSTDIR\launch-agent.bat" "" "$INSTDIR\sounddocs-capture-agent.exe" 0
          SectionEnd
          EOF
        shell: bash

      - name: Build NSIS installer
        run: |
          cd agents/capture-agent-py
          makensis installer.nsi

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: agents/capture-agent-py/SoundDocsAgent-Windows.exe

  upload-to-release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write
      actions: read
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: List downloaded files
        run: |
          echo "Contents of current directory:"
          ls -la
          echo "Contents of macos-installer (if exists):"
          ls -la macos-installer/ || echo "macos-installer directory not found"
          echo "Contents of windows-installer (if exists):"
          ls -la windows-installer/ || echo "windows-installer directory not found"

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            SoundDocsAgent-macOS.pkg
            SoundDocsAgent-Windows.exe
          fail_on_unmatched_files: true
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
