name: CI

on:
  pull_request:
    branches: [main, beta]
  push:
    branches: [main, beta]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pnpm install
          pip install ruff sqlfluff

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/web/src/**/*.{ts,tsx}
            apps/web/src/**/*.{js,jsx}
            agents/**/*.{py}
            supabase/migrations/**/*.{sql}

      - name: Debug changed files outputs
        run: |
          echo "=== DEBUG: tj-actions/changed-files outputs ==="
          echo "All changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "All changed files count: ${{ steps.changed-files.outputs.all_changed_files_count }}"
          echo "Any changed: ${{ steps.changed-files.outputs.any_changed }}"
          echo ""
          echo "TypeScript files: ${{ steps.changed-files.outputs.ts }}"
          echo "TypeScript files count: ${{ steps.changed-files.outputs.ts_files_count }}"
          echo "TypeScript any changed: ${{ steps.changed-files.outputs.ts_any_changed }}"
          echo ""
          echo "JavaScript files: ${{ steps.changed-files.outputs.js }}"
          echo "JavaScript files count: ${{ steps.changed-files.outputs.js_files_count }}"
          echo "JavaScript any changed: ${{ steps.changed-files.outputs.js_any_changed }}"
          echo ""
          echo "Python files: ${{ steps.changed-files.outputs.py }}"
          echo "Python files count: ${{ steps.changed-files.outputs.py_files_count }}"
          echo "Python any changed: ${{ steps.changed-files.outputs.py_any_changed }}"
          echo ""
          echo "SQL files: ${{ steps.changed-files.outputs.sql }}"
          echo "SQL files count: ${{ steps.changed-files.outputs.sql_files_count }}"
          echo "SQL any changed: ${{ steps.changed-files.outputs.sql_any_changed }}"
          echo "==============================================="

      - name: Run ESLint on changed files
        if: always()  # Always run to ensure linting happens
        run: |
          if [ -n "${{ steps.changed-files.outputs.ts }}" ] || [ -n "${{ steps.changed-files.outputs.js }}" ]; then
            echo "🧹 Running ESLint on changed files..."
            echo "📝 Changed TS/TSX files: ${{ steps.changed-files.outputs.ts }}"
            echo "📝 Changed JS/JSX files: ${{ steps.changed-files.outputs.js }}"

            # Create a combined list of changed TS/JS files
            CHANGED_FILES="${{ steps.changed-files.outputs.ts }} ${{ steps.changed-files.outputs.js }}"
            echo "$CHANGED_FILES" | tr ' ' '\n' | xargs npx eslint --max-warnings 0
          else
            echo "⚠️  No specific TS/JS files detected, running full ESLint on web app..."
            npx eslint --max-warnings 0 --ext .ts,.tsx,.js,.jsx apps/web/src
          fi

      - name: Run TypeScript check on changed files
        if: always()  # Always run to ensure type checking happens
        run: |
          cd apps/web
          if [ -n "${{ steps.changed-files.outputs.ts }}" ]; then
            echo "🔧 Running TypeScript check on changed files..."
            echo "📝 Changed TypeScript files: ${{ steps.changed-files.outputs.ts }}"

            echo "${{ steps.changed-files.outputs.ts }}" | tr ' ' '\n' | xargs ../../node_modules/.bin/tsc --noEmit --project tsconfig.app.json
          else
            echo "⚠️  No specific TS files detected, running full TypeScript check..."
            ../../node_modules/.bin/tsc --noEmit --project tsconfig.app.json
          fi

      - name: Run Python linting on changed files
        if: always()  # Always run to ensure Python linting happens
        run: |
          if [ -n "${{ steps.changed-files.outputs.py }}" ]; then
            echo "🐍 Running Python linting on changed files..."
            echo "📝 Changed Python files: ${{ steps.changed-files.outputs.py }}"

            echo "${{ steps.changed-files.outputs.py }}" | tr ' ' '\n' | xargs ruff check --max-warnings=0
          else
            echo "✅ No Python files changed - skipping Python linting"
          fi

      - name: Run SQL linting on changed files
        if: always()  # Always run to ensure SQL linting happens
        run: |
          if [ -n "${{ steps.changed-files.outputs.sql }}" ]; then
            echo "🗄️ Running SQL linting on changed files..."
            echo "📝 Changed SQL files: ${{ steps.changed-files.outputs.sql }}"

            echo "${{ steps.changed-files.outputs.sql }}" | tr ' ' '\n' | xargs sqlfluff fix --dialect postgres
          else
            echo "✅ No SQL files changed - skipping SQL linting"
          fi

      - name: Code quality summary
        if: always()
        run: |
          echo "🎯 Code Quality Check Summary:"
          echo "📊 Total changed files: ${{ steps.changed-files.outputs.all_changed_files_count }}"
          echo "🔧 TypeScript files processed: ${{ steps.changed-files.outputs.ts_files_count }}"
          echo "🧹 JavaScript files processed: ${{ steps.changed-files.outputs.js_files_count }}"
          echo "🐍 Python files processed: ${{ steps.changed-files.outputs.py_files_count }}"
          echo "🗄️ SQL files processed: ${{ steps.changed-files.outputs.sql_files_count }}"
          echo ""
          echo "📝 Files processed:"
          echo "  TS/TSX: ${{ steps.changed-files.outputs.ts }}"
          echo "  JS/JSX: ${{ steps.changed-files.outputs.js }}"
          echo "  Python: ${{ steps.changed-files.outputs.py }}"
          echo "  SQL: ${{ steps.changed-files.outputs.sql }}"
          echo ""
          echo "✅ All code quality checks completed successfully!"

      - name: Run build
        run: pnpm build
