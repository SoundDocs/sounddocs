name: CI

on:
  pull_request:
    branches: [main, beta]
  push:
    branches: [main, beta]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick selective checks for PRs and feature branches
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history so base commit exists for diffing

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pnpm install
          pip install ruff sqlfluff

      - name: Get changed files
        id: get-files
        run: |
          echo "🔍 Detecting changed files..."

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            DIFF_RANGE="$BASE_SHA...$HEAD_SHA"  # PRs: compare from branch point
            echo "📋 PR detected - comparing: $DIFF_RANGE"
          else
            DIFF_RANGE="HEAD~1..HEAD"           # pushes: last commit vs previous
            echo "📋 Push detected - comparing: $DIFF_RANGE"
          fi

          # Ensure we have the SHAs locally (defensive)
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch --no-tags --prune --depth=50 origin $BASE_SHA $HEAD_SHA || true
          fi

          # Get changed files by type using proper git pathspecs
          # TS/JS: Limit to source files only (exclude configs like vite.config.ts)
          TS_FILES=$(git diff --name-only "$DIFF_RANGE" -- ':(glob)apps/web/src/**/*.{ts,tsx}' | tr '\n' ' ' || true)
          JS_FILES=$(git diff --name-only "$DIFF_RANGE" -- ':(glob)apps/web/src/**/*.{js,jsx}' | tr '\n' ' ' || true)
          PY_FILES=$(git diff --name-only "$DIFF_RANGE" -- ':(glob)**/*.py' | tr '\n' ' ' || true)
          SQL_FILES=$(git diff --name-only "$DIFF_RANGE" -- ':(glob)**/*.sql' | tr '\n' ' ' || true)

          # Debug output
          echo "📝 TypeScript files: ${TS_FILES:-none}"
          echo "📝 JavaScript files: ${JS_FILES:-none}"
          echo "📝 Python files: ${PY_FILES:-none}"
          echo "📝 SQL files: ${SQL_FILES:-none}"

          # Export for use in other steps
          echo "ts_files=$TS_FILES" >> $GITHUB_OUTPUT
          echo "js_files=$JS_FILES" >> $GITHUB_OUTPUT
          echo "py_files=$PY_FILES" >> $GITHUB_OUTPUT
          echo "sql_files=$SQL_FILES" >> $GITHUB_OUTPUT

          # Set flags for conditional steps
          [ -n "$TS_FILES" ] && echo "has_ts=true" >> $GITHUB_OUTPUT || echo "has_ts=false" >> $GITHUB_OUTPUT
          [ -n "$JS_FILES" ] && echo "has_js=true" >> $GITHUB_OUTPUT || echo "has_js=false" >> $GITHUB_OUTPUT
          [ -n "$PY_FILES" ] && echo "has_py=true" >> $GITHUB_OUTPUT || echo "has_py=false" >> $GITHUB_OUTPUT
          [ -n "$SQL_FILES" ] && echo "has_sql=true" >> $GITHUB_OUTPUT || echo "has_sql=false" >> $GITHUB_OUTPUT

      - name: Run ESLint and Prettier on changed files
        if: steps.get-files.outputs.has_ts == 'true' || steps.get-files.outputs.has_js == 'true'
        run: |
          CHANGED_FILES="${{ steps.get-files.outputs.ts_files }} ${{ steps.get-files.outputs.js_files }}"
          echo "Running ESLint on: $CHANGED_FILES"
          echo "$CHANGED_FILES" | tr ' ' '\n' | xargs -r npx --no-install eslint --max-warnings 0 --cache --fix
          echo "Running Prettier on: $CHANGED_FILES"
          echo "$CHANGED_FILES" | tr ' ' '\n' | xargs -r npx --no-install prettier --write --ignore-unknown

      - name: Type-check changed TS files
        if: steps.get-files.outputs.has_ts == 'true'
        run: |
          echo "${{ steps.get-files.outputs.ts_files }}" \
            | tr ' ' '\n' \
            | xargs -r pnpm dlx tsc-files --noEmit -p apps/web/tsconfig.app.json --pretty false

      - name: Run Python linting on changed files
        if: steps.get-files.outputs.has_py == 'true'
        run: |
          echo "${{ steps.get-files.outputs.py_files }}" | tr ' ' '\n' | xargs -r ruff check --fix --max-warnings=0

      - name: Run SQL linting on changed files
        if: steps.get-files.outputs.has_sql == 'true'
        run: |
          echo "${{ steps.get-files.outputs.sql_files }}" | tr ' ' '\n' | xargs -r sqlfluff fix --dialect postgres

      - name: Commit and push changes
        if: steps.get-files.outputs.has_ts == 'true' || steps.get-files.outputs.has_js == 'true' || steps.get-files.outputs.has_py == 'true' || steps.get-files.outputs.has_sql == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "style: apply automatic fixes from linters"
            git push
          else
            echo "No changes to commit."
          fi

      - name: No code-quality checks needed
        if: steps.get-files.outputs.has_ts != 'true' && steps.get-files.outputs.has_js != 'true' && steps.get-files.outputs.has_py != 'true' && steps.get-files.outputs.has_sql != 'true'
        run: echo "✅ No changed TS/JS/Py/SQL files — skipping code-quality steps."

      - name: Code quality summary
        if: always()
        run: |
          echo "🎯 Code Quality Check Summary (Selective):"
          echo "📊 TypeScript checks: ${{ steps.get-files.outputs.has_ts == 'true' && 'Yes (changed source files only)' || 'No' }}"
          echo "🧹 ESLint checks: ${{ steps.get-files.outputs.has_ts == 'true' || steps.get-files.outputs.has_js == 'true' && 'Yes (changed files only)' || 'No' }}"
          echo "🐍 Python linting: ${{ steps.get-files.outputs.has_py == 'true' && 'Yes (changed files only)' || 'No' }}"
          echo "🗄️ SQL linting: ${{ steps.get-files.outputs.has_sql == 'true' && 'Yes (changed files only)' || 'No' }}"
          echo ""
          echo "📝 Source files detected (configs excluded):"
          echo "  TS/TSX: ${{ steps.get-files.outputs.ts_files }}"
          echo "  JS/JSX: ${{ steps.get-files.outputs.js_files }}"
          echo "  Python: ${{ steps.get-files.outputs.py_files }}"
          echo "  SQL: ${{ steps.get-files.outputs.sql_files }}"
          echo ""
          echo "✅ Selective code quality checks completed!"
          echo "ℹ️  Full TypeScript check runs on main/beta pushes to catch cross-file breakages"

      - name: Run build
        run: pnpm build

  # Full TypeScript check to catch cross-file breakages (main/beta only)
  full-typescript-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Full TypeScript check (catches cross-file breakages)
        run: pnpm exec tsc --noEmit -p apps/web/tsconfig.app.json
